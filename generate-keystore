#!/bin/bash
# Prompt for the keypass, storepass, and keystore file basename from user;
# store answers in file ./.env and create keystore file with them

JWT_KEYPAIR_ALIAS=server

echo -n "keystore base name: "
read JWT_KEY_STORE_BASE_NAME

echo -n "store password: "
read -s JWT_KEY_STORE_PASS

# The two passwords must be the same, otherwise keystore says:
#   Warning:  Different store and key passwords not supported for PKCS12 KeyStores. Ignoring user-specified -keypass value.
JWT_KEYPAIR_PASS="${JWT_KEY_STORE_PASS}"

if [ "${JWT_KEY_STORE_BASE_NAME:${#JWT_KEY_STORE_BASE_NAME}-4}" != ".jks" ] ; then
  JWT_KEY_STORE_BASE_NAME="${JWT_KEY_STORE_BASE_NAME}.jks"
fi

DIR=./src/main/resources

if [ -f .env ]; then
  mv .env .env.bak
  echo "backed up .env to .env.bak"
fi

cat <<EOF > .env
# Automatically generated by generate-keystore on $(date)
JWT_KEY_STORE=classpath:$JWT_KEY_STORE_BASE_NAME
JWT_KEY_STORE_PASS=$JWT_KEY_STORE_PASS
JWT_KEYPAIR_ALIAS=$JWT_KEYPAIR_ALIAS
JWT_KEYPAIR_PASS=$JWT_KEYPAIR_PASS
EOF

echo "created file .env"

if [ -d $DIR ]; then
  keytool -genkeypair -alias $JWT_KEYPAIR_ALIAS -keyalg RSA -keypass $JWT_KEYPAIR_PASS -keystore $DIR/$JWT_KEY_STORE_BASE_NAME -storepass $JWT_KEY_STORE_PASS
  echo "generated keystore file $DIR/$JWT_KEY_STORE_BASE_NAME"
else
  echo "$DIR not found; are you sure you're in the project root directory?"
  echo "FAIL: keystore file not created"
fi
