#!/bin/bash

# Create the Docker image for the tcp-java service.
# All actions are local to the VM; does not use aws or ecs-cli.
# Should be run before deploy-to-ecs is run.

# Fail on any error; unset variables are errors; show commands before executing:
set -eux
PROJECT="$1"
ENV="$2"
aws_region="$3"

# TODO: see if logging anything from this script would be helpful

# TODO: make sure we're in the correct (root) directory
# Can just check for Dockerfile, and cd .. if not there

date

echo "Running in $PWD"
echo "Project = $PROJECT"
echo "Target Environment = $ENV"

docker --version
ls -al Docker* generate-keystore

password=$(echo -n "fpnggretbevrf" | tr '[a-mn-zA-MN-Z]' '[n-za-mN-ZA-M]')
# TODO: figure out how secure the keystore password needs to be, and how to get it

echo "Generating the keystore and .env file..."
cat <<EOF > gk-input
keystore
$password
Nobody
DevOps
Excella
Arlington
VA
US
yes
EOF

./generate-keystore < gk-input && rm gk-input

cp -p .env tcp-java-ecs/

# Add DB values to .env :
DB_USER=$(aws ssm get-parameter --region $aws_region --name "/$PROJECT/$ENV/rds/username" --with-decryption --query "Parameter.Value" --out text)
DB_PASSWORD=$(aws ssm get-parameter --region $aws_region --name "/$PROJECT/$ENV/rds/password" --with-decryption --query "Parameter.Value" --out text)
DB_ENDPOINT=$(aws ssm get-parameter --region $aws_region --name "/$PROJECT/$ENV/rds/endpoint" --query "Parameter.Value" --out text)

# Split at : into HOST and PORT:
read DB_HOST DB_PORT <<<$(IFS=":"; echo $DB_ENDPOINT)

# Note: do NOT use double-quotes around the values; bash isn't interpreting .env: ecs-cli compose is, and it does not drop quotes.
cat >> tcp-java-ecs/.env <<EOF
DB_HOST=${DB_HOST}
DB_PORT=${DB_PORT}
DB_USER=${DB_USER}
DB_PASSWORD=${DB_PASSWORD}
AWS_REGION=${aws_region}
EOF

echo "Building the tcp-java-api Docker image..."
# TODO: may need sudo, or to run this script as sudo?
docker build -t tcp-java-api:latest . -f tcp-java-ecs/Dockerfile

echo "Checking for the Docker image..."
docker image ls | grep tcp-java-api
